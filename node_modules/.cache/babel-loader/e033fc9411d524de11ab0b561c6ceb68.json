{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chandler\\\\Desktop\\\\checkers\\\\checkers\\\\src\\\\Game.js\";\nimport React from 'react';\nimport Board from './Board';\nimport Display from './Display';\n/*\r\n\r\nLogic considerations\r\n\r\nInitially creating the checker positions and passing them down to components\r\n\r\nDeleting checkers once they're eliminated from the game\r\n\r\nimplementing possible moves for the checkers\r\n\r\ncheckers cannot occupy the same space\r\n\r\ncheckers must remain within the dimensions of the board\r\n\r\n**/\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.checkerpositions = this.initBoard();\n    console.log(this.checkerpositions[0]);\n    console.log(this.checkerpositions[1]);\n    this.state = {\n      player1: true,\n      player1_checkers: this.checkerpositions[0],\n      player2_checkers: this.checkerpositions[1],\n      activechecker: [-1, -1]\n    };\n    this.playerMove = this.playerMove.bind(this);\n    this.removeActiveChecker = this.removeActiveChecker.bind(this);\n    this.calculateMove = this.calculateMove.bind(this);\n  }\n\n  calculateMove(rowid, colid) {\n    if (this.state.activechecker[0] < 0 || this.state.activechecker[1] < 0) {\n      alert(\"Active checker not set!\");\n    }\n\n    let moves = this.determineAllowedMoves();\n\n    if (this.isItemInArray(moves, [rowid, colid]) >= 0) {\n      if (this.state.player1) {\n        let activeindex = this.isItemInArray(this.state.player1_checkers, this.state.activechecker);\n        let moveindex = this.isItemInArray(moves, [rowid, colid]);\n        this.state.player1_checkers.splice(activeindex, 1, moves[moveindex]);\n        this.setState({\n          player1_checkers: this.state.player1_checkers\n        });\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  determineAllowedMoves() {\n    let moves = [];\n\n    if (this.state.player1) {\n      if (this.state.activechecker[0] - 1 >= 0) {\n        if (this.state.activechecker[1] - 1 >= 0) {\n          moves.push([this.state.activechecker[0] - 1, this.state.activechecker[1] - 1]);\n        }\n\n        if (this.state.activechecker[1] + 1 <= 7) {\n          moves.push([this.state.activechecker[0] - 1, this.state.activechecker[1] + 1]);\n        }\n      }\n\n      for (let i = 0; i < moves.length; i++) {\n        if (this.isItemInArray(this.state.player2_checkers, moves[i])) {\n          moves.splice(i, 1);\n\n          if (this.state.activechecker[1] - 2 >= 0 && this.state.activechecker[0] - 2 >= 0) {\n            if (this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2]) === -1) {\n              if (this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2]) === -1) {\n                moves.push([this.state.activechecker[0] - 2, this.state.activechecker[1] - 2]);\n              }\n            }\n          }\n        } else if (this.isItemInArray(this.state.player1_checkers, moves[i])) {\n          moves.splice(i, 1);\n\n          if (this.state.activechecker[0] - 2 >= 0 && this.state.activechecker[1] + 2 <= 7) {\n            if (this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2]) === -1) {\n              if (this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2]) === -1) {\n                moves.push([this.state.activechecker[0] - 2, this.state.activechecker[1] - 2]);\n              }\n            }\n          }\n        }\n      }\n    } else {}\n\n    return moves;\n  }\n\n  isItemInArray(array, item) {\n    for (var i = 0; i < array.length; i++) {\n      // This if statement depends on the format of your array\n      if (array[i][0] == item[0] && array[i][1] == item[1]) {\n        return i; // Found it\n      }\n    }\n\n    return -1; // Not found\n  }\n\n  initBoard() {\n    let player1 = [];\n    let player2 = [];\n    let startingpositions = [];\n\n    for (let i = 0; i < 2; i++) {\n      for (let j = 0; j < 8; j++) {\n        player1.push([i + 6, j]);\n        player2.push([i, j]);\n      }\n    }\n\n    startingpositions.push(player1);\n    startingpositions.push(player2);\n    return startingpositions;\n  }\n\n  playerMove(rowid, colid, fnc) {\n    alert(\"Player Move!\");\n    this.setState(state => ({\n      // player1: !state.player1,\n      activechecker: [rowid, colid]\n    }), fnc);\n    alert(rowid, colid);\n  }\n\n  removeActiveChecker() {\n    this.setState({\n      activechecker: [-1, -1]\n    });\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    if (this.state.player1 == true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Board, {\n        player1_checkers: this.state.player1_checkers,\n        calculateMove: this.calculateMove,\n        destroyactivechecker: this.removeActiveChecker,\n        activechecker: this.state.activechecker,\n        player2_checkers: this.state.player2_checkers,\n        player1: this.state.player1,\n        playermove: this.playerMove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(Display, {\n        playerturn: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Board, {\n        player1_checkers: this.state.player1_checkers,\n        calculateMove: this.calculateMove,\n        destroyactivechecker: this.removeActiveChecker,\n        activechecker: this.state.activechecker,\n        player2_checkers: this.state.player2_checkers,\n        player1: this.state.player1,\n        playermove: this.playerMove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(Display, {\n        playerturn: 2,\n        activechecker: this.state.activechecker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:\\Users\\Chandler\\Desktop\\checkers\\checkers\\src\\Game.js"],"names":["React","Board","Display","Game","Component","constructor","props","checkerpositions","initBoard","console","log","state","player1","player1_checkers","player2_checkers","activechecker","playerMove","bind","removeActiveChecker","calculateMove","rowid","colid","alert","moves","determineAllowedMoves","isItemInArray","activeindex","moveindex","splice","setState","push","i","length","array","item","player2","startingpositions","j","fnc","componentDidMount","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Board from './Board';\r\nimport Display from './Display'\r\n\r\n/*\r\n\r\nLogic considerations\r\n\r\nInitially creating the checker positions and passing them down to components\r\n\r\nDeleting checkers once they're eliminated from the game\r\n\r\nimplementing possible moves for the checkers\r\n\r\ncheckers cannot occupy the same space\r\n\r\ncheckers must remain within the dimensions of the board\r\n\r\n**/\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.checkerpositions = this.initBoard();\r\n      console.log(this.checkerpositions[0]);\r\n      console.log(this.checkerpositions[1]);\r\n      this.state = {player1: true, player1_checkers: this.checkerpositions[0], player2_checkers: this.checkerpositions[1], activechecker: [-1,-1]};\r\n    this.playerMove = this.playerMove.bind(this);\r\n    this.removeActiveChecker = this.removeActiveChecker.bind(this);\r\n    this.calculateMove = this.calculateMove.bind(this);\r\n    }\r\n\r\n    calculateMove(rowid, colid){\r\n        if(this.state.activechecker[0] < 0 || this.state.activechecker[1] < 0)\r\n        {\r\n            alert(\"Active checker not set!\");\r\n        }\r\n        let moves = this.determineAllowedMoves()\r\n        if(this.isItemInArray(moves, [rowid, colid]) >= 0){\r\n            if(this.state.player1){\r\n               let activeindex = this.isItemInArray(this.state.player1_checkers, this.state.activechecker);\r\n               let moveindex = this.isItemInArray(moves, [rowid, colid]);\r\n               this.state.player1_checkers.splice(activeindex, 1, moves[moveindex])\r\n               this.setState({player1_checkers: this.state.player1_checkers})\r\n               return true;\r\n            }\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    determineAllowedMoves(){\r\n        let moves = []\r\n        if(this.state.player1){\r\n            if((this.state.activechecker[0] - 1) >=0){\r\n                if((this.state.activechecker[1] - 1) >=0){\r\n                    moves.push([this.state.activechecker[0]-1, this.state.activechecker[1]-1]);\r\n                }\r\n                if (this.state.activechecker[1] + 1 <= 7){\r\n                    moves.push([this.state.activechecker[0]-1, this.state.activechecker[1]+1]);\r\n                }\r\n            }\r\n            for(let i = 0; i < moves.length; i++){\r\n                if(this.isItemInArray(this.state.player2_checkers, moves[i])){\r\n                    moves.splice(i, 1);\r\n                    if(this.state.activechecker[1] - 2 >=0 && this.state.activechecker[0] - 2 >=0){\r\n                        if(this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2 ]) === -1){\r\n                            if(this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2 ]) === -1){\r\n                                moves.push([this.state.activechecker[0] - 2, this.state.activechecker[1] - 2]);\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n                else if(this.isItemInArray(this.state.player1_checkers, moves[i])){\r\n                    moves.splice(i, 1);\r\n                    if(this.state.activechecker[0] - 2 >=0 &&  this.state.activechecker[1] + 2 <= 7){\r\n                        if(this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2 ]) === -1){\r\n                            if(this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2 ]) === -1){\r\n                                moves.push([this.state.activechecker[0] - 2, this.state.activechecker[1] - 2]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n                \r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n\r\n        return moves;\r\n\r\n    }\r\n\r\n    isItemInArray(array, item) {\r\n        for (var i = 0; i < array.length; i++) {\r\n            // This if statement depends on the format of your array\r\n            if (array[i][0] == item[0] && array[i][1] == item[1]) {\r\n                return i;   // Found it\r\n            }\r\n        }\r\n        return -1;   // Not found\r\n    }\r\n\r\n    initBoard(){\r\n        let player1=[];\r\n        let player2=[];\r\n        let startingpositions = []\r\n        for(let i = 0 ; i < 2; i++){\r\n            for(let j = 0; j < 8; j++){\r\n                player1.push([i+6,j]);\r\n                player2.push([i, j]);\r\n            }\r\n        }\r\n        startingpositions.push(player1);\r\n        startingpositions.push(player2);\r\n        return startingpositions;\r\n    }\r\n\r\n    playerMove(rowid, colid, fnc){\r\n        alert(\"Player Move!\");\r\n        this.setState(state => ({\r\n            // player1: !state.player1,\r\n            activechecker: [rowid, colid]\r\n          }), fnc);\r\n\r\n          alert(rowid, colid);\r\n    }\r\n\r\n    removeActiveChecker(){\r\n        this.setState({activechecker: [-1, -1]});\r\n\r\n    }\r\n    \r\n    componentDidMount() {\r\n    }\r\n    \r\n     componentWillUnmount() {\r\n    }\r\n\r\n    \r\n     render() {\r\n         if(this.state.player1 == true){\r\n            return(\r\n                <div>\r\n                <Board player1_checkers={this.state.player1_checkers} calculateMove={this.calculateMove} destroyactivechecker={this.removeActiveChecker} activechecker={this.state.activechecker} player2_checkers={this.state.player2_checkers} player1={this.state.player1} playermove={this.playerMove}/>\r\n                \r\n                <Display playerturn={1}/>\r\n                 </div>\r\n                );\r\n         }\r\n         else{\r\n            return(\r\n                <div>\r\n                <Board player1_checkers={this.state.player1_checkers}  calculateMove={this.calculateMove} destroyactivechecker={this.removeActiveChecker} activechecker={this.state.activechecker} player2_checkers={this.state.player2_checkers} player1={this.state.player1} playermove={this.playerMove}/>\r\n                \r\n                <Display playerturn={2} activechecker={this.state.activechecker}/>\r\n                 </div>\r\n                );\r\n         }\r\n       \r\n     }\r\n  }\r\n\r\n  export default Game;"]},"metadata":{},"sourceType":"module"}