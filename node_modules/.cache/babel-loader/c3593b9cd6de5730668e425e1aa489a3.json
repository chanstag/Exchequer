{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chandler\\\\Desktop\\\\checkers\\\\checkers\\\\src\\\\Row.js\";\nimport React from 'react';\nimport Tile from './Tile';\n\nclass Row extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Row\", this.props);\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  renderRow() {\n    let tiles = [];\n\n    for (let i = 0; i < 8; i++) {\n      if (this.props.redcheckers.includes(i)) {\n        if (this.props.color == true) {\n          if (i % 2 == 1) {\n            tiles.push(React.createElement(Tile, {\n              fill: true,\n              rowid: this.rowid,\n              playermove: this.props.playermove,\n              player1: this.props.player1,\n              colid: i,\n              checkercolor: \"red\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }));\n          } else {\n            tiles.push(React.createElement(Tile, {\n              fill: false,\n              rowid: this.rowid,\n              playermove: this.props.playermove,\n              player1: this.props.player1,\n              checkercolor: \"red\",\n              colid: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24\n              },\n              __self: this\n            }));\n          }\n        } else {\n          if (i % 2 == 1) {\n            tiles.push(React.createElement(Tile, {\n              fill: false,\n              rowid: this.rowid,\n              playermove: this.props.playermove,\n              player1: this.props.player1,\n              checkercolor: \"red\",\n              colid: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29\n              },\n              __self: this\n            }));\n          } else {\n            tiles.push(React.createElement(Tile, {\n              fill: true,\n              rowid: this.rowid,\n              playermove: this.props.playermove,\n              player1: this.props.player1,\n              checkercolor: \"red\",\n              colid: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32\n              },\n              __self: this\n            }));\n          }\n        }\n      } else if (this.props.greencheckers.includes(i)) {\n        if (this.props.color == true) {\n          if (i % 2 == 1) {\n            tiles.push(React.createElement(Tile, {\n              fill: true,\n              rowid: this.rowid,\n              playermove: this.props.playermove,\n              player1: this.props.player1,\n              colid: i,\n              checkercolor: \"green\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            }));\n          } else {\n            tiles.push(React.createElement(Tile, {\n              fill: false,\n              rowid: this.rowid,\n              playermove: this.props.playermove,\n              player1: this.props.player1,\n              checkercolor: \"green\",\n              colid: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }));\n          }\n        } else {\n          if (i % 2 == 1) {\n            tiles.push(React.createElement(Tile, {\n              fill: false,\n              rowid: this.rowid,\n              playermove: this.props.playermove,\n              player1: this.props.player1,\n              checkercolor: \"green\",\n              colid: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48\n              },\n              __self: this\n            }));\n          } else {\n            tiles.push(React.createElement(Tile, {\n              fill: true,\n              rowid: this.rowid,\n              playermove: this.props.playermove,\n              player1: this.props.player1,\n              checkercolor: \"green\",\n              colid: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51\n              },\n              __self: this\n            }));\n          }\n        }\n      } else {\n        if (this.props.color == true) {\n          if (i % 2 == 1) {\n            tiles.push(React.createElement(Tile, {\n              fill: true,\n              rowid: this.rowid,\n              playermove: this.props.playermove,\n              player1: this.props.player1,\n              colid: i,\n              checkercolor: null,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }));\n          } else {\n            tiles.push(React.createElement(Tile, {\n              fill: false,\n              rowid: this.rowid,\n              playermove: this.props.playermove,\n              player1: this.props.player1,\n              checkercolor: null,\n              colid: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }));\n          }\n        } else {\n          if (i % 2 == 1) {\n            tiles.push(React.createElement(Tile, {\n              fill: false,\n              rowid: this.rowid,\n              playermove: this.props.playermove,\n              player1: this.props.player1,\n              checkercolor: null,\n              colid: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67\n              },\n              __self: this\n            }));\n          } else {\n            tiles.push(React.createElement(Tile, {\n              fill: true,\n              rowid: this.rowid,\n              playermove: this.props.playermove,\n              player1: this.props.player1,\n              checkercolor: null,\n              colid: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }));\n          }\n        }\n      }\n    }\n\n    return tiles;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.renderRow());\n  }\n\n}\n\nexport default Row;","map":{"version":3,"sources":["C:\\Users\\Chandler\\Desktop\\checkers\\checkers\\src\\Row.js"],"names":["React","Tile","Row","Component","constructor","props","console","log","componentDidMount","componentWillUnmount","renderRow","tiles","i","redcheckers","includes","color","push","rowid","playermove","player1","greencheckers","render","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Tile from './Tile'\r\n\r\nclass Row extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      console.log(\"Row\", this.props)\r\n    }\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n    \r\n    renderRow(){\r\n      let tiles = []\r\n      for(let i = 0; i < 8; i++){\r\n          if(this.props.redcheckers.includes(i)){\r\n                if(this.props.color == true){\r\n                    if(i%2 == 1){\r\n                        tiles.push(<Tile fill={true} rowid={this.rowid}  playermove={this.props.playermove} player1={this.props.player1}  colid={i} checkercolor=\"red\"/>)\r\n                    }\r\n                    else{\r\n                        tiles.push(<Tile fill={false} rowid={this.rowid}  playermove={this.props.playermove} player1={this.props.player1} checkercolor=\"red\" colid={i}/>)\r\n                    }\r\n                }\r\n                else{\r\n                    if(i%2 == 1){\r\n                        tiles.push(<Tile fill={false} rowid={this.rowid}  playermove={this.props.playermove} player1={this.props.player1} checkercolor=\"red\" colid={i}/>)\r\n                    }\r\n                    else{\r\n                        tiles.push(<Tile fill={true} rowid={this.rowid}  playermove={this.props.playermove} player1={this.props.player1} checkercolor=\"red\" colid={i}/>)\r\n                    }\r\n                \r\n                }\r\n            }\r\n          else if(this.props.greencheckers.includes(i)){\r\n            if(this.props.color == true){\r\n                if(i%2 == 1){\r\n                    tiles.push(<Tile fill={true} rowid={this.rowid} playermove={this.props.playermove} player1={this.props.player1} colid={i} checkercolor=\"green\"/>)\r\n                  }\r\n                  else{\r\n                    tiles.push(<Tile fill={false} rowid={this.rowid} playermove={this.props.playermove} player1={this.props.player1} checkercolor=\"green\" colid={i}/>)\r\n                  }\r\n              }\r\n              else{\r\n                if(i%2 == 1){\r\n                    tiles.push(<Tile fill={false} rowid={this.rowid} playermove={this.props.playermove} player1={this.props.player1} checkercolor=\"green\" colid={i}/>)\r\n                  }\r\n                  else{\r\n                    tiles.push(<Tile fill={true} rowid={this.rowid} playermove={this.props.playermove} player1={this.props.player1} checkercolor=\"green\" colid={i}/>)\r\n                }\r\n              }\r\n\r\n          }\r\n          else{\r\n            if(this.props.color == true){\r\n                if(i%2 == 1){\r\n                    tiles.push(<Tile fill={true} rowid={this.rowid} playermove={this.props.playermove} player1={this.props.player1} colid={i} checkercolor={null}/>)\r\n                  }\r\n                  else{\r\n                    tiles.push(<Tile fill={false} rowid={this.rowid} playermove={this.props.playermove} player1={this.props.player1} checkercolor={null} colid={i}/>)\r\n                  }\r\n              }\r\n              else{\r\n                if(i%2 == 1){\r\n                    tiles.push(<Tile fill={false} rowid={this.rowid} playermove={this.props.playermove} player1={this.props.player1} checkercolor={null} colid={i}/>)\r\n                  }\r\n                  else{\r\n                    tiles.push(<Tile fill={true} rowid={this.rowid} playermove={this.props.playermove} player1={this.props.player1} checkercolor={null} colid={i}/>)\r\n                }\r\n              }\r\n\r\n          }\r\n         \r\n      }\r\n      return tiles;\r\n    }\r\n    \r\n     render() {\r\n       return(\r\n          <div style={{height: '50px'}}> \r\n           {this.renderRow()}\r\n         </div>);\r\n     }\r\n  }\r\n\r\n  export default Row;"]},"metadata":{},"sourceType":"module"}