{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chandler\\\\Desktop\\\\checkers\\\\checkers\\\\src\\\\Board.js\";\nimport React from 'react';\nimport Row from './Row';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props); //   this.state={player1: this.props.player1_checkers, player2: this.props.player2_checkers}\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  drawGrid() {\n    let rows = [];\n\n    for (let i = 0; i < 8; i++) {\n      let redcheckers = [];\n      let greencheckers = [];\n\n      for (let coordinate of player1_checkers) {\n        if (coordinate[0] == i) {\n          redcheckers.push(coordinate[1]);\n        }\n      }\n\n      for (let coordinate of player2_checkers) {\n        if (coordinate[0] == i) {\n          greencheckers.push(coordinate[1]);\n        }\n      }\n\n      if (i % 2 == 1) {\n        rows.push(React.createElement(Row, {\n          rowid: i,\n          color: true,\n          redcheckers: redcheckers,\n          greencheckers: greencheckers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }));\n      } else {\n        rows.push(React.createElement(Row, {\n          rowid: i,\n          color: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }));\n      }\n    }\n\n    return rows;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.drawGrid());\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:\\Users\\Chandler\\Desktop\\checkers\\checkers\\src\\Board.js"],"names":["React","Row","Board","Component","constructor","props","componentDidMount","componentWillUnmount","drawGrid","rows","i","redcheckers","greencheckers","coordinate","player1_checkers","push","player2_checkers","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEnB;AAEC;;AAKDC,EAAAA,iBAAiB,GAAG,CACnB;;AAEAC,EAAAA,oBAAoB,GAAG,CACvB;;AAEDC,EAAAA,QAAQ,GAAE;AACN,QAAIC,IAAI,GAAG,EAAX;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,aAAa,GAAG,EAApB;;AACA,WAAI,IAAIC,UAAR,IAAsBC,gBAAtB,EAAuC;AACnC,YAAID,UAAU,CAAC,CAAD,CAAV,IAAiBH,CAArB,EAAuB;AACnBC,UAAAA,WAAW,CAACI,IAAZ,CAAiBF,UAAU,CAAC,CAAD,CAA3B;AACH;AACJ;;AACD,WAAI,IAAIA,UAAR,IAAsBG,gBAAtB,EAAuC;AACnC,YAAIH,UAAU,CAAC,CAAD,CAAV,IAAiBH,CAArB,EAAuB;AACnBE,UAAAA,aAAa,CAACG,IAAd,CAAmBF,UAAU,CAAC,CAAD,CAA7B;AACH;AACJ;;AACD,UAAGH,CAAC,GAAG,CAAJ,IAAS,CAAZ,EAAc;AACVD,QAAAA,IAAI,CAACM,IAAL,CAAU,oBAAC,GAAD;AAAK,UAAA,KAAK,EAAEL,CAAZ;AAAe,UAAA,KAAK,EAAE,IAAtB;AAA4B,UAAA,WAAW,EAAEC,WAAzC;AAAsD,UAAA,aAAa,EAAEC,aAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACH,OAFD,MAGI;AACAH,QAAAA,IAAI,CAACM,IAAL,CAAU,oBAAC,GAAD;AAAK,UAAA,KAAK,EAAEL,CAAZ;AAAe,UAAA,KAAK,EAAE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACH;AAEJ;;AACD,WAAOD,IAAP;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACN,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKT,QAAL,EADF,CADH;AAKD;;AAjD6B;;AAoDjC,eAAeN,KAAf","sourcesContent":["import React from 'react';\r\nimport Row from './Row';\r\n\r\nclass Board extends React.Component{\r\n    constructor(props) {\r\n      super(props)\r\n    //   this.state={player1: this.props.player1_checkers, player2: this.props.player2_checkers}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n    \r\n     componentWillUnmount() {\r\n    }\r\n\r\n    drawGrid(){\r\n        let rows = [];\r\n        \r\n        for(let i = 0; i < 8; i++){\r\n            let redcheckers = [];\r\n            let greencheckers = [];\r\n            for(let coordinate of player1_checkers){\r\n                if (coordinate[0] == i){\r\n                    redcheckers.push(coordinate[1]);\r\n                }\r\n            }\r\n            for(let coordinate of player2_checkers){\r\n                if (coordinate[0] == i){\r\n                    greencheckers.push(coordinate[1]);\r\n                }\r\n            }\r\n            if(i % 2 == 1){\r\n                rows.push(<Row rowid={i} color={true} redcheckers={redcheckers} greencheckers={greencheckers}/>);\r\n            }\r\n            else{\r\n                rows.push(<Row rowid={i} color={false}/>);\r\n            }\r\n            \r\n        }\r\n        return rows;\r\n    }\r\n    \r\n    render() {\r\n       return(\r\n          <div> \r\n           {this.drawGrid()}\r\n         </div>\r\n       );\r\n     }\r\n  }\r\n\r\n  export default Board;"]},"metadata":{},"sourceType":"module"}