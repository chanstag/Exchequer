{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chandler\\\\Desktop\\\\checkers\\\\checkers\\\\src\\\\Game.js\";\nimport React from 'react';\nimport Board from './Board';\nimport Display from './Display';\n/*\r\n\r\nLogic considerations\r\n\r\nInitially creating the checker positions and passing them down to components\r\n\r\nDeleting checkers once they're eliminated from the game\r\n\r\nimplementing possible moves for the checkers\r\n\r\ncheckers cannot occupy the same space\r\n\r\ncheckers must remain within the dimensions of the board\r\n\r\n**/\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.checkerpositions = this.initBoard();\n    console.log(this.checkerpositions[0]);\n    console.log(this.checkerpositions[1]);\n    this.state = {\n      player1: true,\n      player1_checkers: this.checkerpositions[0],\n      player2_checkers: this.checkerpositions[1],\n      activechecker: [null, null]\n    };\n    this.playerMove = this.playerMove.bind(this);\n    this.removeActiveChecker = this.removeActiveChecker.bind(this);\n  }\n\n  initBoard() {\n    let player1 = [];\n    let player2 = [];\n    let startingpositions = [];\n\n    for (let i = 0; i < 2; i++) {\n      for (let j = 0; j < 8; j++) {\n        player1.push([i + 6, j]);\n        player2.push([i, j]);\n      }\n    }\n\n    startingpositions.push(player1);\n    startingpositions.push(player2);\n    return startingpositions;\n  }\n\n  playerMove(rowid, colid) {\n    alert(\"Player Move!\");\n    this.setState(state => ({\n      player1: !state.player1,\n      activechecker: [rowid, colid]\n    }));\n    alert(rowid, colid);\n    this.state.activechecker = [rowid, colid];\n  }\n\n  removeActiveChecker() {}\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    if (this.state.player1 == true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Board, {\n        player1_checkers: this.state.player1_checkers,\n        destroyactivechecker: this.removeActiveChecker,\n        activechecker: this.state.activechecker,\n        player2_checkers: this.state.player2_checkers,\n        player1: this.state.player1,\n        playermove: this.playerMove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Display, {\n        playerturn: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Board, {\n        player1_checkers: this.state.player1_checkers,\n        destroyactivechecker: this.removeActiveChecker,\n        activechecker: this.state.activechecker,\n        player2_checkers: this.state.player2_checkers,\n        player1: this.state.player1,\n        playermove: this.playerMove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Display, {\n        playerturn: 2,\n        activechecker: this.state.activechecker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:\\Users\\Chandler\\Desktop\\checkers\\checkers\\src\\Game.js"],"names":["React","Board","Display","Game","Component","constructor","props","checkerpositions","initBoard","console","log","state","player1","player1_checkers","player2_checkers","activechecker","playerMove","bind","removeActiveChecker","player2","startingpositions","i","j","push","rowid","colid","alert","setState","componentDidMount","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Board from './Board';\r\nimport Display from './Display'\r\n\r\n/*\r\n\r\nLogic considerations\r\n\r\nInitially creating the checker positions and passing them down to components\r\n\r\nDeleting checkers once they're eliminated from the game\r\n\r\nimplementing possible moves for the checkers\r\n\r\ncheckers cannot occupy the same space\r\n\r\ncheckers must remain within the dimensions of the board\r\n\r\n**/\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.checkerpositions = this.initBoard();\r\n      console.log(this.checkerpositions[0]);\r\n      console.log(this.checkerpositions[1]);\r\n      this.state = {player1: true, player1_checkers: this.checkerpositions[0], player2_checkers: this.checkerpositions[1], activechecker: [null,null]};\r\n    this.playerMove = this.playerMove.bind(this);\r\n    this.removeActiveChecker = this.removeActiveChecker.bind(this);\r\n    }\r\n\r\n    initBoard(){\r\n        let player1=[];\r\n        let player2=[];\r\n        let startingpositions = []\r\n        for(let i = 0 ; i < 2; i++){\r\n            for(let j = 0; j < 8; j++){\r\n                player1.push([i+6,j]);\r\n                player2.push([i, j]);\r\n            }\r\n        }\r\n        startingpositions.push(player1);\r\n        startingpositions.push(player2);\r\n        return startingpositions;\r\n    }\r\n\r\n    playerMove(rowid, colid){\r\n        alert(\"Player Move!\");\r\n        this.setState(state => ({\r\n            player1: !state.player1,\r\n            activechecker: [rowid, colid]\r\n          }));\r\n\r\n          alert(rowid, colid);\r\n          this.state.activechecker = [rowid, colid];\r\n    }\r\n\r\n    removeActiveChecker(){\r\n\r\n    }\r\n    \r\n    componentDidMount() {\r\n    }\r\n    \r\n     componentWillUnmount() {\r\n    }\r\n\r\n    \r\n     render() {\r\n         if(this.state.player1 == true){\r\n            return(\r\n                <div>\r\n                <Board player1_checkers={this.state.player1_checkers} destroyactivechecker={this.removeActiveChecker} activechecker={this.state.activechecker} player2_checkers={this.state.player2_checkers} player1={this.state.player1} playermove={this.playerMove}/>\r\n                \r\n                <Display playerturn={1}/>\r\n                 </div>\r\n                );\r\n         }\r\n         else{\r\n            return(\r\n                <div>\r\n                <Board player1_checkers={this.state.player1_checkers} destroyactivechecker={this.removeActiveChecker} activechecker={this.state.activechecker} player2_checkers={this.state.player2_checkers} player1={this.state.player1} playermove={this.playerMove}/>\r\n                \r\n                <Display playerturn={2} activechecker={this.state.activechecker}/>\r\n                 </div>\r\n                );\r\n         }\r\n       \r\n     }\r\n  }\r\n\r\n  export default Game;"]},"metadata":{},"sourceType":"module"}