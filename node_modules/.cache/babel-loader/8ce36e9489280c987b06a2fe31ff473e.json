{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chandler\\\\Desktop\\\\checkers\\\\checkers\\\\src\\\\Tile.js\";\nimport React from 'react';\n\nclass Tile extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const canvas = this.refs[this.props.colid];\n    const ctx = canvas.getContext(\"2d\");\n    ctx.moveTo(0, 0);\n    ctx.lineTo(50, 0);\n    ctx.lineTo(50, 50);\n    ctx.lineTo(0, 50);\n    ctx.lineTo(0, 0);\n    ctx.stroke();\n\n    if (this.props.fill == true) {\n      ctx.fillRect(0, 0, 50, 50);\n    }\n\n    if (this.props.checkercolor == \"red\") {\n      ctx.beginPath();\n      ctx.arc(25, 25, 5, 0, 2 * Math.PI);\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fill();\n    } else if (this.props.checkercolor == \"green\") {\n      ctx.beginPath();\n      ctx.arc(25, 25, 5, 0, 2 * Math.PI);\n      ctx.fillStyle = \"#008000\";\n      ctx.fill();\n    }\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    return React.createElement(\"canvas\", {\n      ref: this.props.colid,\n      width: \"50\",\n      height: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Tile;","map":{"version":3,"sources":["C:\\Users\\Chandler\\Desktop\\checkers\\checkers\\src\\Tile.js"],"names":["React","Tile","Component","constructor","props","componentDidMount","canvas","refs","colid","ctx","getContext","moveTo","lineTo","stroke","fill","fillRect","checkercolor","beginPath","arc","Math","PI","fillStyle","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAG,KAAKC,IAAL,CAAU,KAAKH,KAAL,CAAWI,KAArB,CAAf;AACA,UAAMC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AACAD,IAAAA,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAa,CAAb;AACAF,IAAAA,GAAG,CAACG,MAAJ,CAAW,EAAX,EAAc,CAAd;AACAH,IAAAA,GAAG,CAACG,MAAJ,CAAW,EAAX,EAAc,EAAd;AACAH,IAAAA,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAc,EAAd;AACAH,IAAAA,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAc,CAAd;AACAH,IAAAA,GAAG,CAACI,MAAJ;;AACA,QAAG,KAAKT,KAAL,CAAWU,IAAX,IAAmB,IAAtB,EAA2B;AACzBL,MAAAA,GAAG,CAACM,QAAJ,CAAa,CAAb,EAAe,CAAf,EAAiB,EAAjB,EAAoB,EAApB;AACD;;AACD,QAAG,KAAKX,KAAL,CAAWY,YAAX,IAA2B,KAA9B,EAAoC;AAChCP,MAAAA,GAAG,CAACQ,SAAJ;AACAR,MAAAA,GAAG,CAACS,GAAJ,CAAQ,EAAR,EAAY,EAAZ,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,IAAEC,IAAI,CAACC,EAA7B;AACAX,MAAAA,GAAG,CAACY,SAAJ,GAAgB,SAAhB;AACAZ,MAAAA,GAAG,CAACK,IAAJ;AACH,KALD,MAMK,IAAG,KAAKV,KAAL,CAAWY,YAAX,IAA2B,OAA9B,EAAsC;AACzCP,MAAAA,GAAG,CAACQ,SAAJ;AACAR,MAAAA,GAAG,CAACS,GAAJ,CAAQ,EAAR,EAAY,EAAZ,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,IAAEC,IAAI,CAACC,EAA7B;AACAX,MAAAA,GAAG,CAACY,SAAJ,GAAgB,SAAhB;AACAZ,MAAAA,GAAG,CAACK,IAAJ;AACD;AACF;;AAEAQ,EAAAA,oBAAoB,GAAG,CACvB;;AAECC,EAAAA,MAAM,GAAG;AACR,WAAQ;AAAQ,MAAA,GAAG,EAAE,KAAKnB,KAAL,CAAWI,KAAxB;AAA8B,MAAA,KAAK,EAAC,IAApC;AAAyC,MAAA,MAAM,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAED;;AArC4B;;AAyChC,eAAeP,IAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass Tile extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n    }          \r\n\r\n    componentDidMount() {\r\n      const canvas = this.refs[this.props.colid]\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.moveTo(0,0);\r\n      ctx.lineTo(50,0);\r\n      ctx.lineTo(50,50);\r\n      ctx.lineTo(0, 50);\r\n      ctx.lineTo(0, 0);\r\n      ctx.stroke();\r\n      if(this.props.fill == true){\r\n        ctx.fillRect(0,0,50,50);\r\n      }\r\n      if(this.props.checkercolor == \"red\"){\r\n          ctx.beginPath();\r\n          ctx.arc(25, 25, 5, 0, 2*Math.PI);\r\n          ctx.fillStyle = \"#FF0000\";\r\n          ctx.fill()\r\n      }\r\n      else if(this.props.checkercolor == \"green\"){\r\n        ctx.beginPath();\r\n        ctx.arc(25, 25, 5, 0, 2*Math.PI);\r\n        ctx.fillStyle = \"#008000\";\r\n        ctx.fill()\r\n      }\r\n    }\r\n    \r\n     componentWillUnmount() {\r\n    }\r\n                  \r\n      render() {\r\n       return( <canvas ref={this.props.colid}width=\"50\" height=\"50\"></canvas>\r\n         );\r\n     }\r\n    \r\n  }\r\n\r\n  export default Tile;"]},"metadata":{},"sourceType":"module"}