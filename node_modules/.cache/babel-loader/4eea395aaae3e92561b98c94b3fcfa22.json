{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chandler\\\\Desktop\\\\checkers\\\\checkers\\\\src\\\\Row.js\";\nimport React from 'react';\nimport Tile from './Tile';\n\nclass Row extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  renderRow() {\n    let tiles = [];\n\n    for (let i = 0; i < 8; i++) {\n      if (this.props.color == true) {\n        if (i % 2 == 1) {\n          tiles.push(React.createElement(Tile, {\n            fill: true,\n            boxid: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }));\n        } else {\n          tiles.push(React.createElement(Tile, {\n            fill: false,\n            boxid: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }));\n        }\n      } else {\n        if (i % 2 == 1) {\n          tiles.push(React.createElement(Tile, {\n            fill: false,\n            boxid: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }));\n        } else {\n          tiles.push(React.createElement(Tile, {\n            fill: true,\n            boxid: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }));\n        }\n      }\n    }\n\n    return tiles;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: '100px;'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.renderRow());\n  }\n\n}\n\nexport default Row;","map":{"version":3,"sources":["C:\\Users\\Chandler\\Desktop\\checkers\\checkers\\src\\Row.js"],"names":["React","Tile","Row","Component","constructor","props","componentDidMount","componentWillUnmount","renderRow","tiles","i","color","push","render","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAG,CACnB;;AAEAC,EAAAA,oBAAoB,GAAG,CACvB;;AAEDC,EAAAA,SAAS,GAAE;AACT,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,UAAG,KAAKL,KAAL,CAAWM,KAAX,IAAoB,IAAvB,EAA4B;AAC1B,YAAGD,CAAC,GAAC,CAAF,IAAO,CAAV,EAAY;AACRD,UAAAA,KAAK,CAACG,IAAN,CAAW,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAE,IAAZ;AAAkB,YAAA,KAAK,EAAEF,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD,SAFH,MAGM;AACFD,UAAAA,KAAK,CAACG,IAAN,CAAW,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAE,KAAZ;AAAmB,YAAA,KAAK,EAAEF,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;AACJ,OAPD,MAQI;AACF,YAAGA,CAAC,GAAC,CAAF,IAAO,CAAV,EAAY;AACRD,UAAAA,KAAK,CAACG,IAAN,CAAW,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAE,KAAZ;AAAmB,YAAA,KAAK,EAAEF,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD,SAFH,MAGM;AACFD,UAAAA,KAAK,CAACG,IAAN,CAAW,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAE,IAAZ;AAAkB,YAAA,KAAK,EAAEF,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACH;AAEF;AACJ;;AACD,WAAOD,KAAP;AACD;;AAEAI,EAAAA,MAAM,GAAG;AACP,WACG;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKN,SAAL,EADF,CADH;AAID;;AAxC4B;;AA2ChC,eAAeN,GAAf","sourcesContent":["import React from 'react';\r\nimport Tile from './Tile'\r\n\r\nclass Row extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n    \r\n    componentDidMount() {\r\n    }\r\n    \r\n     componentWillUnmount() {\r\n    }\r\n    \r\n    renderRow(){\r\n      let tiles = []\r\n      for(let i = 0; i < 8; i++){\r\n          if(this.props.color == true){\r\n            if(i%2 == 1){\r\n                tiles.push(<Tile fill={true} boxid={i}/>)\r\n              }\r\n              else{\r\n                tiles.push(<Tile fill={false} boxid={i}/>)\r\n              }\r\n          }\r\n          else{\r\n            if(i%2 == 1){\r\n                tiles.push(<Tile fill={false} boxid={i}/>)\r\n              }\r\n              else{\r\n                tiles.push(<Tile fill={true} boxid={i}/>)\r\n            }\r\n          \r\n          }\r\n      }\r\n      return tiles;\r\n    }\r\n    \r\n     render() {\r\n       return(\r\n          <div style={{height: '100px;'}}> \r\n           {this.renderRow()}\r\n         </div>);\r\n     }\r\n  }\r\n\r\n  export default Row;"]},"metadata":{},"sourceType":"module"}