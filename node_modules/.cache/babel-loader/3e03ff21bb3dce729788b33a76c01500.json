{"ast":null,"code":"var _jsxFileName = \"/Users/chanstag/Desktop/reactpractice/Exchequer/src/Board.js\";\nimport React from 'react';\nimport Row from './Row';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props); //   this.state={player1: this.props.player1_checkers, player2: this.props.player2_checkers}\n\n    console.log(this.props);\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  drawGrid() {\n    let rows = [];\n\n    for (let i = 0; i < 8; i++) {\n      let redcheckers = [];\n      let greencheckers = [];\n\n      for (let coordinate of this.props.player1_checkers) {\n        if (coordinate.position[0] == i) {\n          redcheckers.push(coordinate.position[1]);\n        }\n      }\n\n      for (let coordinate of this.props.player2_checkers) {\n        if (coordinate.position[0] == i) {\n          greencheckers.push(coordinate.position[1]);\n        }\n      }\n\n      if (i % 2 == 1) {\n        rows.push(React.createElement(Row, {\n          rowid: i,\n          color: true,\n          calculateMove: this.props.calculateMove,\n          activechecker: this.props.activechecker,\n          destroyactivechecker: this.props.destroyactivechecker,\n          redcheckers: redcheckers,\n          greencheckers: greencheckers,\n          player1: this.props.player1,\n          playermove: this.props.playermove,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n      } else {\n        rows.push(React.createElement(Row, {\n          rowid: i,\n          color: false,\n          calculateMove: this.props.calculateMove,\n          activechecker: this.props.activechecker,\n          destroyactivechecker: this.props.destroyactivechecker,\n          redcheckers: redcheckers,\n          greencheckers: greencheckers,\n          player1: this.props.player1,\n          playermove: this.props.playermove,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }));\n      }\n    }\n\n    return rows;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.drawGrid());\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/chanstag/Desktop/reactpractice/Exchequer/src/Board.js"],"names":["React","Row","Board","Component","constructor","props","console","log","componentDidMount","componentWillUnmount","drawGrid","rows","i","redcheckers","greencheckers","coordinate","player1_checkers","position","push","player2_checkers","calculateMove","activechecker","destroyactivechecker","player1","playermove","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEnB;;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACH;;AAEDG,EAAAA,iBAAiB,GAAG,CACnB;;AAEAC,EAAAA,oBAAoB,GAAG,CACvB;;AAEDC,EAAAA,QAAQ,GAAE;AACN,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,aAAa,GAAG,EAApB;;AACA,WAAI,IAAIC,UAAR,IAAsB,KAAKV,KAAL,CAAWW,gBAAjC,EAAkD;AAC9C,YAAID,UAAU,CAACE,QAAX,CAAoB,CAApB,KAA0BL,CAA9B,EAAgC;AAC5BC,UAAAA,WAAW,CAACK,IAAZ,CAAiBH,UAAU,CAACE,QAAX,CAAoB,CAApB,CAAjB;AACH;AACJ;;AACD,WAAI,IAAIF,UAAR,IAAsB,KAAKV,KAAL,CAAWc,gBAAjC,EAAkD;AAC9C,YAAIJ,UAAU,CAACE,QAAX,CAAoB,CAApB,KAA0BL,CAA9B,EAAgC;AAC5BE,UAAAA,aAAa,CAACI,IAAd,CAAmBH,UAAU,CAACE,QAAX,CAAoB,CAApB,CAAnB;AACH;AACJ;;AACD,UAAGL,CAAC,GAAG,CAAJ,IAAS,CAAZ,EAAc;AACVD,QAAAA,IAAI,CAACO,IAAL,CAAU,oBAAC,GAAD;AAAK,UAAA,KAAK,EAAEN,CAAZ;AAAe,UAAA,KAAK,EAAE,IAAtB;AAA4B,UAAA,aAAa,EAAE,KAAKP,KAAL,CAAWe,aAAtD;AAAqE,UAAA,aAAa,EAAE,KAAKf,KAAL,CAAWgB,aAA/F;AAA8G,UAAA,oBAAoB,EAAE,KAAKhB,KAAL,CAAWiB,oBAA/I;AAAqK,UAAA,WAAW,EAAET,WAAlL;AAA+L,UAAA,aAAa,EAAEC,aAA9M;AAA6N,UAAA,OAAO,EAAE,KAAKT,KAAL,CAAWkB,OAAjP;AAA0P,UAAA,UAAU,EAAE,KAAKlB,KAAL,CAAWmB,UAAjR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACH,OAFD,MAGI;AACAb,QAAAA,IAAI,CAACO,IAAL,CAAU,oBAAC,GAAD;AAAK,UAAA,KAAK,EAAEN,CAAZ;AAAe,UAAA,KAAK,EAAE,KAAtB;AAA6B,UAAA,aAAa,EAAE,KAAKP,KAAL,CAAWe,aAAvD;AAAsE,UAAA,aAAa,EAAE,KAAKf,KAAL,CAAWgB,aAAhG;AAA+G,UAAA,oBAAoB,EAAE,KAAKhB,KAAL,CAAWiB,oBAAhJ;AAAsK,UAAA,WAAW,EAAET,WAAnL;AAAgM,UAAA,aAAa,EAAEC,aAA/M;AAA8N,UAAA,OAAO,EAAE,KAAKT,KAAL,CAAWkB,OAAlP;AAA2P,UAAA,UAAU,EAAE,KAAKlB,KAAL,CAAWmB,UAAlR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACH;AAEJ;;AACD,WAAOb,IAAP;AACH;;AAEDc,EAAAA,MAAM,GAAG;AACN,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKf,QAAL,EADF,CADH;AAKD;;AA7C6B;;AAgDjC,eAAeR,KAAf","sourcesContent":["import React from 'react';\nimport Row from './Row';\n\nclass Board extends React.Component{\n    constructor(props) {\n      super(props)\n    //   this.state={player1: this.props.player1_checkers, player2: this.props.player2_checkers}\n        console.log(this.props)\n    }\n\n    componentDidMount() {\n    }\n    \n     componentWillUnmount() {\n    }\n\n    drawGrid(){\n        let rows = [];\n        for(let i = 0; i < 8; i++){\n            let redcheckers = [];\n            let greencheckers = [];\n            for(let coordinate of this.props.player1_checkers){\n                if (coordinate.position[0] == i){\n                    redcheckers.push(coordinate.position[1]);\n                }\n            }\n            for(let coordinate of this.props.player2_checkers){\n                if (coordinate.position[0] == i){\n                    greencheckers.push(coordinate.position[1]);\n                }\n            }\n            if(i % 2 == 1){\n                rows.push(<Row rowid={i} color={true} calculateMove={this.props.calculateMove} activechecker={this.props.activechecker} destroyactivechecker={this.props.destroyactivechecker} redcheckers={redcheckers} greencheckers={greencheckers} player1={this.props.player1} playermove={this.props.playermove}/>);\n            }\n            else{\n                rows.push(<Row rowid={i} color={false} calculateMove={this.props.calculateMove} activechecker={this.props.activechecker} destroyactivechecker={this.props.destroyactivechecker} redcheckers={redcheckers} greencheckers={greencheckers} player1={this.props.player1} playermove={this.props.playermove}/>);\n            }\n            \n        }\n        return rows;\n    }\n    \n    render() {\n       return(\n          <div> \n           {this.drawGrid()}\n         </div>\n       );\n     }\n  }\n\n  export default Board;"]},"metadata":{},"sourceType":"module"}