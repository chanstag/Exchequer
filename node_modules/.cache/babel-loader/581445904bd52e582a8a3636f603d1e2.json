{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chandler\\\\Desktop\\\\checkers\\\\checkers\\\\src\\\\Game.js\";\nimport React from 'react';\nimport Board from './Board';\nimport Display from './Display';\n/*\r\n\r\nLogic considerations\r\n\r\nInitially creating the checker positions and passing them down to components\r\n\r\nDeleting checkers once they're eliminated from the game\r\n\r\nimplementing possible moves for the checkers\r\n\r\ncheckers cannot occupy the same space\r\n\r\ncheckers must remain within the dimensions of the board\r\n\r\n**/\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.checkerpositions = this.initBoard();\n    console.log(this.checkerpositions[0]);\n    console.log(this.checkerpositions[1]);\n    this.state = {\n      player1: false,\n      player1_checkers: this.checkerpositions[0],\n      player2_checkers: this.checkerpositions[1],\n      activechecker: [-1, -1]\n    };\n    this.playerMove = this.playerMove.bind(this);\n    this.removeActiveChecker = this.removeActiveChecker.bind(this);\n    this.calculateMove = this.calculateMove.bind(this);\n  }\n\n  calculateMove(rowid, colid) {\n    if (this.state.activechecker[0] < 0 || this.state.activechecker[1] < 0) {\n      alert(\"Active checker not set!\");\n    }\n\n    let moves = this.determineAllowedMoves();\n\n    if (this.isItemInArray(moves, [rowid, colid]) >= 0) {\n      if (this.state.player1) {\n        let activeindex = this.isItemInArray(this.state.player1_checkers, this.state.activechecker);\n        let moveindex = this.isItemInArray(moves, [rowid, colid]);\n        this.state.player1_checkers.splice(activeindex, 1, moves[moveindex]);\n        this.setState({\n          player1_checkers: this.state.player1_checkers,\n          player1: false\n        });\n        return true;\n      } else {\n        let activeindex = this.isItemInArray(this.state.player2_checkers, this.state.activechecker);\n        let moveindex = this.isItemInArray(moves, [rowid, colid]);\n        this.state.player2_checkers.splice(activeindex, 1, moves[moveindex]);\n        this.setState({\n          player2_checkers: this.state.player2_checkers,\n          player1: true\n        });\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  determineAllowedMoves() {\n    let moves = [];\n\n    if (this.state.player1) {\n      if (this.state.activechecker[0] - 1 >= 0) {\n        if (this.state.activechecker[1] - 1 >= 0) {\n          moves.push([this.state.activechecker[0] - 1, this.state.activechecker[1] - 1]);\n        }\n\n        if (this.state.activechecker[1] + 1 <= 7) {\n          moves.push([this.state.activechecker[0] - 1, this.state.activechecker[1] + 1]);\n        }\n      }\n\n      for (let i = 0; i < moves.length; i++) {\n        if (this.isItemInArray(this.state.player2_checkers, moves[i]) >= 0) {\n          moves.splice(i, 1);\n\n          if (this.state.activechecker[1] - 2 >= 0 && this.state.activechecker[0] - 2 >= 0) {\n            if (this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2]) === -1) {\n              if (this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2]) === -1) {\n                if (this.isItemInArray(moves, [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2]) === -1) {\n                  // if(this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2 ]) === -1){\n                  moves.push({\n                    position: [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2],\n                    action: \"attack\"\n                  }); // }\n                }\n              }\n            }\n          } else if (this.state.activechecker[1] + 2 <= 7 && this.state.activechecker[0] - 2 >= 0) {\n            if (this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2]) >= 0) {\n              if (this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2]) === -1) {\n                if (this.isItemInArray(moves, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2]) === -1) {\n                  // if(this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2 ]) === -1){\n                  moves.push({\n                    position: [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2],\n                    action: \"attack\"\n                  }); // }\n                }\n              }\n            }\n          }\n        } //can't stack checkers in same Tile\n        else if (this.isItemInArray(this.state.player1_checkers, moves[i]) >= 0) {\n            moves.splice(i, 1); // if(this.state.activechecker[0] - 2 >= 0 &&  this.state.activechecker[1] + 2 <= 7){\n            //     if(this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2 ]) === -1){\n            //         if(this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2 ]) === -1){\n            //             moves.push([this.state.activechecker[0] - 2, this.state.activechecker[1] - 2]);\n            //         }\n            //     }\n            // }\n          }\n      }\n    } else {\n      if (this.state.activechecker[0] + 1 <= 7) {\n        if (this.state.activechecker[1] - 1 >= 0) {\n          moves.push({\n            position: [this.state.activechecker[0] + 1, this.state.activechecker[1] - 1],\n            action: \"move\"\n          });\n        }\n\n        if (this.state.activechecker[1] + 1 <= 7) {\n          moves.push({\n            position: [this.state.activechecker[0] + 1, this.state.activechecker[1] + 1],\n            action: \"move\"\n          });\n        }\n      }\n\n      for (let i = 0; i < moves.length; i++) {\n        if (this.isItemInArray(this.state.player2_checkers, moves[i]) >= 0) {\n          moves.splice(i, 1); //diagnolly to the left\n        } else if (this.isItemInArray(this.state.player1_checkers, moves[i]) >= 0) {\n          moves.splice(i, 1);\n\n          if (this.state.activechecker[0] + 2 <= 7 && this.state.activechecker[1] - 2 >= 0) {\n            // if(this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] + 2, this.state.activechecker[1] - 2 ]) === -1){\n            if (this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] + 2, this.state.activechecker[1] - 2]) === -1) {\n              if (this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] + 2, this.state.activechecker[1] - 2]) === -1) {\n                if (this.isItemInArray(moves, [this.state.activechecker[0] + 2, this.state.activechecker[1] - 2]) === -1) {\n                  moves.push({\n                    position: [this.state.activechecker[0] + 2, this.state.activechecker[1] - 2],\n                    action: \"attack\"\n                  });\n                }\n              }\n            }\n          }\n        } //determine if opponents checker is in the bottom right position\n        else if (this.state.activechecker[0] + 2 <= 7 && this.state.activechecker[1] + 2 <= 7) {\n            if (this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] + 2, this.state.activechecker[1] + 2]) === -1) {\n              if (this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] + 2, this.state.activechecker[1] + 2]) === -1) {\n                if (this.isItemInArray(moves, [this.state.activechecker[0] + 2, this.state.activechecker[1] + 2]) === -1) {\n                  moves.push({\n                    postion: [this.state.activechecker[0] + 2, this.state.activechecker[1] + 2],\n                    action: \"attack\"\n                  });\n                }\n              }\n            }\n          }\n      }\n    }\n\n    return moves;\n  }\n\n  isItemInArray(array, item) {\n    for (var i = 0; i < array.length; i++) {\n      // This if statement depends on the format of your array\n      if (array[i][0] == item[0] && array[i][1] == item[1]) {\n        return i; // Found it\n      }\n    }\n\n    return -1; // Not found\n  }\n\n  initBoard() {\n    let player1 = [];\n    let player2 = [];\n    let startingpositions = [];\n\n    for (let i = 0; i < 2; i++) {\n      for (let j = 0; j < 8; j++) {\n        player1.push([i + 6, j]);\n        player2.push([i, j]);\n      }\n    }\n\n    startingpositions.push(player1);\n    startingpositions.push(player2);\n    return startingpositions;\n  }\n\n  playerMove(rowid, colid, fnc) {\n    // alert(\"Player Move!\");\n    this.setState(state => ({\n      // player1: !state.player1,\n      activechecker: [rowid, colid]\n    }), fnc);\n  }\n\n  removeActiveChecker() {\n    this.setState({\n      activechecker: [-1, -1]\n    });\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    if (this.state.player1 == true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Board, {\n        player1_checkers: this.state.player1_checkers,\n        calculateMove: this.calculateMove,\n        destroyactivechecker: this.removeActiveChecker,\n        activechecker: this.state.activechecker,\n        player2_checkers: this.state.player2_checkers,\n        player1: this.state.player1,\n        playermove: this.playerMove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(Display, {\n        playerturn: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Board, {\n        player1_checkers: this.state.player1_checkers,\n        calculateMove: this.calculateMove,\n        destroyactivechecker: this.removeActiveChecker,\n        activechecker: this.state.activechecker,\n        player2_checkers: this.state.player2_checkers,\n        player1: this.state.player1,\n        playermove: this.playerMove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(Display, {\n        playerturn: 2,\n        activechecker: this.state.activechecker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:\\Users\\Chandler\\Desktop\\checkers\\checkers\\src\\Game.js"],"names":["React","Board","Display","Game","Component","constructor","props","checkerpositions","initBoard","console","log","state","player1","player1_checkers","player2_checkers","activechecker","playerMove","bind","removeActiveChecker","calculateMove","rowid","colid","alert","moves","determineAllowedMoves","isItemInArray","activeindex","moveindex","splice","setState","push","i","length","position","action","postion","array","item","player2","startingpositions","j","fnc","componentDidMount","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Board from './Board';\r\nimport Display from './Display'\r\n\r\n/*\r\n\r\nLogic considerations\r\n\r\nInitially creating the checker positions and passing them down to components\r\n\r\nDeleting checkers once they're eliminated from the game\r\n\r\nimplementing possible moves for the checkers\r\n\r\ncheckers cannot occupy the same space\r\n\r\ncheckers must remain within the dimensions of the board\r\n\r\n**/\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.checkerpositions = this.initBoard();\r\n      console.log(this.checkerpositions[0]);\r\n      console.log(this.checkerpositions[1]);\r\n      this.state = {player1: false, player1_checkers: this.checkerpositions[0], player2_checkers: this.checkerpositions[1], activechecker: [-1,-1]};\r\n    this.playerMove = this.playerMove.bind(this);\r\n    this.removeActiveChecker = this.removeActiveChecker.bind(this);\r\n    this.calculateMove = this.calculateMove.bind(this);\r\n    }\r\n\r\n    calculateMove(rowid, colid){\r\n        if(this.state.activechecker[0] < 0 || this.state.activechecker[1] < 0)\r\n        {\r\n            alert(\"Active checker not set!\");\r\n        }\r\n        let moves = this.determineAllowedMoves()\r\n        if(this.isItemInArray(moves, [rowid, colid]) >= 0){\r\n            if(this.state.player1){\r\n               let activeindex = this.isItemInArray(this.state.player1_checkers, this.state.activechecker);\r\n               let moveindex = this.isItemInArray(moves, [rowid, colid]);\r\n               this.state.player1_checkers.splice(activeindex, 1, moves[moveindex])\r\n               this.setState({player1_checkers: this.state.player1_checkers, player1: false})\r\n               return true;\r\n            }\r\n            else{\r\n                let activeindex = this.isItemInArray(this.state.player2_checkers, this.state.activechecker);\r\n               let moveindex = this.isItemInArray(moves, [rowid, colid]);\r\n               this.state.player2_checkers.splice(activeindex, 1, moves[moveindex])\r\n               this.setState({player2_checkers: this.state.player2_checkers, player1: true})\r\n               return true;\r\n            }\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    determineAllowedMoves(){\r\n        let moves = []\r\n        if(this.state.player1){\r\n            if((this.state.activechecker[0] - 1) >=0){\r\n                if((this.state.activechecker[1] - 1) >=0){\r\n                    moves.push([this.state.activechecker[0]-1, this.state.activechecker[1]-1]);\r\n                }\r\n                if (this.state.activechecker[1] + 1 <= 7){\r\n                    moves.push([this.state.activechecker[0]-1, this.state.activechecker[1]+1]);\r\n                }\r\n            }\r\n            for(let i = 0; i < moves.length; i++){\r\n                if(this.isItemInArray(this.state.player2_checkers, moves[i]) >= 0){\r\n                    moves.splice(i, 1);\r\n                    if(this.state.activechecker[1] - 2 >=0 && this.state.activechecker[0] - 2 >=0){\r\n                        if(this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2 ]) === -1){\r\n                            if(this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2 ]) === -1){\r\n                                if(this.isItemInArray(moves, [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2 ]) === -1){\r\n                                // if(this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2 ]) === -1){\r\n                                    moves.push({position: [this.state.activechecker[0] - 2, this.state.activechecker[1] - 2], action: \"attack\"});\r\n                                // }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.state.activechecker[1] + 2 <=7 && this.state.activechecker[0] - 2 >=0){\r\n                        if(this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2 ]) >= 0){\r\n                            if(this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2 ]) === -1){\r\n                                if(this.isItemInArray(moves, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2 ]) === -1){\r\n                                // if(this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2 ]) === -1){\r\n                                    moves.push({position: [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2], action: \"attack\"});\r\n                                // }\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                    \r\n                }\r\n                //can't stack checkers in same Tile\r\n                else if(this.isItemInArray(this.state.player1_checkers, moves[i]) >= 0){\r\n                    moves.splice(i, 1);\r\n                    // if(this.state.activechecker[0] - 2 >= 0 &&  this.state.activechecker[1] + 2 <= 7){\r\n                    //     if(this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2 ]) === -1){\r\n                    //         if(this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] - 2, this.state.activechecker[1] + 2 ]) === -1){\r\n                    //             moves.push([this.state.activechecker[0] - 2, this.state.activechecker[1] - 2]);\r\n                    //         }\r\n                    //     }\r\n                    // }\r\n                }\r\n            }\r\n                \r\n\r\n        }\r\n        else{\r\n            if((this.state.activechecker[0] + 1) <= 7){\r\n                if((this.state.activechecker[1] - 1) >= 0){\r\n                    moves.push({position: [this.state.activechecker[0]+1, this.state.activechecker[1]-1], action: \"move\"});\r\n                }\r\n                if (this.state.activechecker[1] + 1 <= 7){\r\n                    moves.push({position: [this.state.activechecker[0]+1, this.state.activechecker[1]+1], action:\"move\"});\r\n                }\r\n            }\r\n            for(let i = 0; i < moves.length; i++){\r\n                if(this.isItemInArray(this.state.player2_checkers, moves[i]) >= 0){\r\n                    moves.splice(i, 1);\r\n                    //diagnolly to the left\r\n                }\r\n                else if(this.isItemInArray(this.state.player1_checkers, moves[i]) >= 0){\r\n                    moves.splice(i, 1);\r\n                    if(this.state.activechecker[0] + 2 <= 7 && this.state.activechecker[1] - 2 >=0){\r\n                        // if(this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] + 2, this.state.activechecker[1] - 2 ]) === -1){\r\n                            if(this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] + 2, this.state.activechecker[1] - 2 ]) === -1){\r\n                                if(this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] + 2, this.state.activechecker[1] - 2 ]) === -1){\r\n                                    if(this.isItemInArray(moves, [this.state.activechecker[0] + 2, this.state.activechecker[1] - 2 ]) === -1){\r\n                                        moves.push({position:[this.state.activechecker[0] + 2, this.state.activechecker[1] - 2], action: \"attack\"});\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //determine if opponents checker is in the bottom right position\r\n                    else if(this.state.activechecker[0] + 2 <= 7 && this.state.activechecker[1] + 2 <=7){\r\n                        if(this.isItemInArray(this.state.player1_checkers, [this.state.activechecker[0] + 2, this.state.activechecker[1] + 2 ]) === -1){\r\n                            if(this.isItemInArray(this.state.player2_checkers, [this.state.activechecker[0] + 2, this.state.activechecker[1] + 2 ]) === -1){\r\n                                if(this.isItemInArray(moves, [this.state.activechecker[0] + 2, this.state.activechecker[1] + 2 ]) === -1){\r\n                                    moves.push({postion:[this.state.activechecker[0] + 2, this.state.activechecker[1] + 2], action: \"attack\"});\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        return moves;\r\n\r\n    }\r\n\r\n    isItemInArray(array, item) {\r\n        for (var i = 0; i < array.length; i++) {\r\n            // This if statement depends on the format of your array\r\n            if (array[i][0] == item[0] && array[i][1] == item[1]) {\r\n                return i;   // Found it\r\n            }\r\n        }\r\n        return -1;   // Not found\r\n    }\r\n\r\n    initBoard(){\r\n        let player1=[];\r\n        let player2=[];\r\n        let startingpositions = []\r\n        for(let i = 0 ; i < 2; i++){\r\n            for(let j = 0; j < 8; j++){\r\n                player1.push([i+6,j]);\r\n                player2.push([i, j]);\r\n            }\r\n        }\r\n        startingpositions.push(player1);\r\n        startingpositions.push(player2);\r\n        return startingpositions;\r\n    }\r\n\r\n    playerMove(rowid, colid, fnc){\r\n        // alert(\"Player Move!\");\r\n        this.setState(state => ({\r\n            // player1: !state.player1,\r\n            activechecker: [rowid, colid]\r\n          }), fnc);\r\n    }\r\n\r\n    removeActiveChecker(){\r\n        this.setState({activechecker: [-1, -1]});\r\n    }\r\n    \r\n    componentDidMount() {\r\n    }\r\n    \r\n     componentWillUnmount() {\r\n    }\r\n\r\n    \r\n     render() {\r\n         if(this.state.player1 == true){\r\n            return(\r\n                <div>\r\n                <Board player1_checkers={this.state.player1_checkers} calculateMove={this.calculateMove} destroyactivechecker={this.removeActiveChecker} activechecker={this.state.activechecker} player2_checkers={this.state.player2_checkers} player1={this.state.player1} playermove={this.playerMove}/>\r\n                \r\n                <Display playerturn={1}/>\r\n                 </div>\r\n                );\r\n         }\r\n         else{\r\n            return(\r\n                <div>\r\n                <Board player1_checkers={this.state.player1_checkers}  calculateMove={this.calculateMove} destroyactivechecker={this.removeActiveChecker} activechecker={this.state.activechecker} player2_checkers={this.state.player2_checkers} player1={this.state.player1} playermove={this.playerMove}/>\r\n                \r\n                <Display playerturn={2} activechecker={this.state.activechecker}/>\r\n                 </div>\r\n                );\r\n         }\r\n       \r\n     }\r\n  }\r\n\r\n  export default Game;"]},"metadata":{},"sourceType":"module"}